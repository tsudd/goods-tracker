@inject IStringLocalizer<SharedResource> Loc
@using GoodsTracker.Platform.Shared.Models
@using System.Globalization

<div class="card mb-3 w-100">
    <div class="row">
        <div class="col-md-4 d-flex justify-content-center align-items-center">
            <img src="@Item.ImgLink" class="d-block img-fluid w-50" style="min-width: 50%; object-position: center; object-fit: cover; height: 10rem"
                 alt="@Item.Name">
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <h5 class="card-title">@Item.Name</h5>
                <div class="card-text text-end fw-light">
                    @Item.Weight
                    <small>@Item.WeightUnit</small>
                </div>
                <div class="card-text fs-3 text-end pt-2 position-relative">
                    @if (Item.OnDiscount)
                    {
                        var price = BuildPrice(Item.DiscountPrice);
                        <span class="text-decoration-line-through fs-6">
                            @Item.Price<small>@Item.Currensy</small>
                        </span>
                        <span class="fw-bold text-danger">
                            @price.MainPart.<small class="fs-5">@price.Cents</small>
                            <span
                                class="fs-6 text-danger">
                                @Item.Currensy
                            </span>
                        </span>
                    }
                    else
                    {
                        var price = BuildPrice(Item.Price);
                        <span>
                            <span class="fw-bold">@price.MainPart.<small class="fs-5">@price.Cents</small></span>
                            <span class="fs-6">@Item.Currensy</span>
                        </span>
                    }
                </div>
                <div class="text-end">
                    <span>@Item.Country</span>
                    <span class="@SetShopNameStyle()">Белмаркет</span>
                </div>
                <p class="card-text text-end">
                    <small class="text-muted">
                        @Loc["FetchDateLabel"]
                        @Item.FetchDate.ToString("dd/MM/yyyy")
                    </small>
                </p>
            </div>
        </div>
    </div>
</div>

@code {

    // TODO: move methods to an ItemService
    [Parameter]
    public BaseItemModel Item { get; set; } = new();

    protected string SetShopNameStyle()
    {
        return $"col-4 badge text-wrap bg-primary";
    }

    [Parameter]
    public Func<int, string>? GetBadge { get; set; }

    [CascadingParameter]
    Task<AuthenticationState>? AuthenticationState { get; set; }

    [Parameter]
    public Func<int, string>? GetShopName { get; set; }

    protected (string MainPart, string Cents) BuildPrice(decimal price)
    {
        var priceParts = price.ToString(CultureInfo.InvariantCulture).Split('.');
        return (priceParts[0], priceParts[1]);
    }

}
