@inject IStringLocalizer<SharedResource> Loc
@inject StateProvider authStateProvider
@inject ILocalStorageService LocalStorage
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@using GoodsTracker.Platform.Client.Extenstions

<nav class="navbar navbar-expand-lg bg-primary">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <BrandLogo/>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarScroll"
            aria-controls="navbarScroll" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarScroll">
            <ul class="navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll" style="--bs-scroll-height: 100px;">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        @Loc["HomePageTitle"]
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="items">
                        @Loc["ItemListPageTitle"]
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="favorites">
                        @Loc["FavoritesLabel"]
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="compare">
                        @Loc["ComparisonLabel"]
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="faq">
                        @Loc["QuestionButtonLabel"]
                    </NavLink>
                </li>
            </ul>
            <div class="text-end">
                <AuthorizeView>
                    <Authorized>
                        <button type="button" class="btn btn-outline-secondary ml-md-auto"
                                @onclick="@LogoutClick">@Loc["LogoutButtonLabel"]</button>
                    </Authorized>
                    <NotAuthorized>
                        <a class="btn btn-outline-secondary me-2" href="login">@Loc["LoginButtonLabel"]</a>
                        <a class="btn btn-warning me-2" href="register">@Loc["SignUpButtonLabel"]</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
            <CultureSelector />
        </div>
    </div>
</nav>

@code {
    private IJSObjectReference? module;

    [CascadingParameter]
    Task<AuthenticationState>? AuthenticationState { get; set; }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import",
                "./js/firebase.js");
        }
    }

    [JSInvokable]
    public async Task LogoutClick()
    {
        var signOutState = await module!.InvokeAsync<bool>("firebaseSignOut");
        CurrentUser.UserName = null;
        CurrentUser.IsAuthenticated = signOutState;
        await LocalStorage.RemoveItemAsync("refreshToken");
        await LocalStorage.RemoveItemAsync("accessToken");
        authStateProvider.ManageUser();
        NavigationManager.NavigateTo("");
    }
}
