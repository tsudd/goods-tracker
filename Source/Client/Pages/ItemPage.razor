@page "/items/{id:int}"
@inject IStringLocalizer<SharedResource> Loc
@inject ItemManagementService ItemManagementService
@inject NavigationManager NavigationManager
@using GoodsTracker.Platform.Shared.Models
@using System.Globalization
@using Radzen.Blazor

<PageTitle>@Loc["ItemLabel"]</PageTitle>
<div class="p-3">
    <div class="d-flex flex-column">
        @if (Item != null)
        {
            <div class="row">
                <div class="position-relative" style="width: max-content;">
                    <h1>@Loc["ItemLabel"] @Item.Name</h1>
                </div>
                <div class="d-flex my-2">
                    @foreach (var category in Item.Categories)
                    {
                        <span class="badge d-block rounded-pill bg-primary me-2 text-wrap text-reset">@category</span>
                    }
                </div>
                <div class="col-md-4 p-1 mt-3 md-1">
                    <img src="@Item.ImgLink" class="img-fluid" width="500" height="500" style="transform: scale(1) translate3d(0px, 0px, 0px);"
                         alt="@Item.Name">
                    <div class="d-flex text-muted mt-3 justify-content-between">
                        <span>@Loc["CountryNameLabel"]: @Item.Country</span>
                        <span>@Loc["VendorCodeLabel"]: @Item.VendorCode</span>
                    </div>
                </div>
                <div class="col-md-5">
                    @if (Item.Weight != null)
                    {
                        <h5>@Loc["ItemDescriptionLabel"]:</h5>
                        <p class="mt-3">@Item.Compound</p>
                        <h5>@Loc["WeightLabel"]: @Item.Weight @Item.WeightUnit</h5>
                        if (Item.Portion != null)
                        {
                            <strong>@Loc["NutritionLabel"] @Item.Portion @Item.WeightUnit</strong>
                            <div class="d-flex flex-column text-muted mt-3 md-5">
                                <span class="row justify-content-between">
                                    <span class="col">@Loc["ProteinLabel"]:</span><span class="col-auto text-end">@Item.Protein @Item.WeightUnit</span>
                                </span>
                                <span class="row justify-content-between">
                                    <span class="col">@Loc["FatLabel"]:</span><span class="col-auto text-end">@Item.Fat @Item.WeightUnit</span>
                                </span>
                                <span class="row justify-content-between">
                                    <span class="col">@Loc["CarboLabel"]:</span><span class="col-auto text-end">@Item.Carbo @Item.WeightUnit</span>
                                </span>
                            </div>
                        }
                    }
                    @if (!string.IsNullOrEmpty(Item.ProducerName))
                    {
                        <h5>@Loc["ProducerNameLabel"]: @Item.ProducerName</h5>
                    }
                </div>
                <div class="col-md-3 p-3">
                    <div class="card w-100">
                        <div class="card-body">
                            <div class="d-flex justify-content-between mb-3">
                                <span class="badge text-wrap text-center text-reset bg-primary pt-2">@Item.VendorName</span>
                                @if (Liked)
                                {
                                    <button type="button" class="btn">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                                             class="bi bi-heart-fill" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd"
                                                  d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"/>
                                        </svg>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-heart"
                                             viewBox="0 0 16 16">
                                            <path
                                                d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/>
                                        </svg>
                                    </button>
                                }
                            </div>
                            <h5 class="card-title">
                                <div class="card-text fs-3 pt-2 position-relative">
                                    @if (Item.OnDiscount)
                                    {
                                        var price = SplitPrice(Item.DiscountPrice);
                                        <span class="col position-absolute text-decoration-line-through fs-6"
                                              style="top: -0.5px">
                                            @Item.Price<small>@Item.Currency</small>
                                        </span>
                                        <span class="col-auto fw-bold text-danger">
                                            @price.MainPart.<small class="fs-5">@price.Cents</small>
                                            <span
                                                class="fs-6 text-danger">
                                                @Item.Currency
                                            </span>
                                        </span>
                                    }
                                    else
                                    {
                                        var price = SplitPrice(Item.Price);
                                        <span>
                                            <span class="fw-bold">@price.MainPart.<small class="fs-5">@price.Cents</small></span>
                                            <span class="fs-6">@Item.Currency</span>
                                        </span>
                                    }
                                    <span class="text-muted fs-6">/ @Loc["OnePeaceLabel"].</span>
                                </div>
                            </h5>
                            <p class="card-text">@Loc["FetchDateLabel"] @Item.FetchDate.ToString("dd/MM/yyyy")</p>
                            <button href="#" class="btn btn-primary">@Loc["AddToComparisonButtonLabel"]</button>
                        </div>
                    </div>
                </div>
            </div>
            <h2 class="mt-4">@Loc["PricesGraphLabel"]</h2>
            <div class="row p-4">
                <RadzenChart Style="height:500px;">
                    <RadzenAreaSeries Data="@PriceHistory" Stroke="rgb(205, 218, 50)" StrokeWidth="2" Fill="rgba(205, 218, 50,.5)" CategoryProperty="Label" Title=@Loc["PriceHistoryLabel"]
                                      ValueProperty="Price">
                        <ChildContent>
                            <RadzenMarkers MarkerType="MarkerType.Square" Fill="#F5EFED" Stroke="rgba(205, 218, 50)" StrokeWidth="2" Size="8"/>
                        </ChildContent>
                    </RadzenAreaSeries>
                    <RadzenColumnOptions Radius="10"/>
                    <RadzenValueAxis Formatter="@FormatAsCurrency">
                        <RadzenGridLines Visible="true"/>
                        <RadzenAxisTitle Text=@Loc["PriceAxisLabel"]/>
                    </RadzenValueAxis>
                    <RadzenCategoryAxis Max="DateTime.Today" Step="TimeSpan.FromDays(7)">
                        <RadzenGridLines Visible="true" LineType="LineType.Dashed"/>
                        <RadzenAxisTitle Text=@Loc["TimeAxisLabel"]/>
                    </RadzenCategoryAxis>
                </RadzenChart>
            </div>
            <h2 class="mt-4"> @Loc["SimilarItemsLabel"] </h2>
        }
        else
        {
            <div><span class="oi oi-reload spin"></span> Loading more items...</div>
        }
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; init; } = -1;

    private bool Liked { get; set; } = false;

    private ItemModel? Item { get; set; }
    private IEnumerable<PriceInfo> PriceHistory { get; set; } = Array.Empty<PriceInfo>();

    private static (string MainPart, string Cents) SplitPrice(decimal price)
    {
        var priceParts = price.ToString(CultureInfo.CurrentCulture).Split('.');
        return (priceParts[0], priceParts[1]);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Id != -1)
        {
            var getItemResult = await ItemManagementService.GetItemDetailsAsync(Id);

            if (getItemResult.IsSuccess)
            {
                Item = getItemResult.Value;
                BuildChartInfo();
                return;
            }
        }
        NavigationManager.NavigateTo("/notfound");
    }

    private void BuildChartInfo()
    {
        ArgumentNullException.ThrowIfNull(Item);
        PriceHistory = Item.PriceHistory.Select(priceInfo => new PriceInfo
        {
            Label = priceInfo.FetchDate, Price = priceInfo.DiscountPrice ?? priceInfo.Price
        }).ToList();
    }
    
    string FormatAsCurrency(object value)
    {
        return ((double)value).ToString("G7", CultureInfo.InvariantCulture) + $" {Item?.Currency}";
    }
}
