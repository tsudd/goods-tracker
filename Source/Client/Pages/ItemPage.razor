@page "/items/{id:int}"
@inject IStringLocalizer<SharedResource> Loc
@using GoodsTracker.Platform.Shared.Models
@using System.Globalization

<PageTitle>@Loc["ItemLabel"]</PageTitle>
<div class="p-3">
    <div class="d-flex flex-column">
        <div class="row">
            <div class="position-relative" style="width: max-content;">
                <h1>@Loc["ItemLabel"] @Item.Name</h1>
            </div>
            <div class="d-flex my-2">
                @foreach (var category in Item.Categories)
                {
                    <span class="badge d-block rounded-pill bg-primary me-2 text-wrap text-reset">@category</span>
                }
            </div>
            <div class="col-md-4 p-1 mt-3 md-1">
                <img src="@Item.ImgLink" class="img-fluid" width="500" height="500" style="transform: scale(1) translate3d(0px, 0px, 0px);"
                     alt="@Item.Name">
                <div class="d-flex text-muted mt-3 justify-content-between">
                    <span>@Item.ProducerName</span>
                    <span>@Item.Country</span>
                    <span>@Loc["VendorCodeLabel"]: @Item.VendorCode</span>
                </div>
            </div>
            <div class="col-md-5">
                <h5>@Loc["ItemDescriptionLabel"]:</h5>
                <p class="mt-3">@Item.Compound</p>
                <strong>@Loc["NutritionLabel"] @Item.Portion @Item.WeightUnit</strong>
                <div class="d-flex flex-column text-muted mt-3 md-5">
                    <span class="row justify-content-between">
                        <span class="col">@Loc["ProteinLabel"]:</span><span class="col-auto text-end">@Item.Protein @Item.WeightUnit</span>
                    </span>
                    <span class="row justify-content-between">
                        <span class="col">@Loc["FatLabel"]:</span><span class="col-auto text-end">@Item.Fat @Item.WeightUnit</span>
                    </span>
                    <span class="row justify-content-between">
                        <span class="col">@Loc["CarboLabel"]:</span><span class="col-auto text-end">@Item.Carbo @Item.WeightUnit</span>
                    </span>
                </div>
            </div>
            <div class="col-md-3 p-3">
                <div class="card w-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <span class="badge text-wrap text-center text-reset bg-primary pt-2">Белмаркет</span>
                            @if (@Liked)
                            {
                                <button type="button" class="btn">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor"
                                         class="bi bi-heart-fill" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd"
                                              d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"/>
                                    </svg>
                                </button>
                            }
                            else
                            {
                                <button type="button" class="btn">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-heart"
                                         viewBox="0 0 16 16">
                                        <path
                                            d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/>
                                    </svg>
                                </button>
                            }
                        </div>
                        <h5 class="card-title">
                            @if (Item.OnDiscount)
                            {
                                var price = BuildPrice(Item.DiscountPrice);
                                <span class="col end-0 position-absolute text-decoration-line-through fs-6"
                                      style="top: -0.5px">@Item.Price<small>@Item.Currensy</small>
                                </span>
                                <span class="col-auto fw-bold text-danger">@price.MainPart.<small class="fs-5">@price.Cents</small>
                                    <span
                                        class="fs-6 text-danger"> @Item.Currensy</span></span>
                            }
                            else
                            {
                                var price = BuildPrice(Item.Price);
                                <span>
                                    <span class="fw-bold">@price.MainPart.<small class="fs-5">@price.Cents</small></span>
                                    <span class="fs-6">@Item.Currensy</span>
                                </span>
                            }
                            <span class="text-muted fs-6">/ @Loc["OnePeaceLabel"].</span>
                        </h5>
                        <p class="card-text">@Loc["FetchDateLabel"] @Item.FetchDate.ToString("dd/MM/yyyy")</p>
                        <button href="#" class="btn btn-primary">@Loc["AddToComparisonButtonLabel"]</button>
                    </div>
                </div>
            </div>
        </div>
        <h2 class="mt-4">@Loc["PricesGraphLabel"]</h2>
        <h2 class="mt-4">@Loc["SimilarItemsLabel"]</h2>
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; init; } = -1;

    public bool Liked { get; set; } = false;

    public ItemModel Item { get; set; } = new()
    {
        Id = 1,
        Currensy = "BYN",
        FetchDate = DateTime.Today,
        Country = "Беларусь",
        ImgLink = "https://avatars.mds.yandex.net/get-eda/3709189/309002db176ee60d37b5def843c57c76/500x500",
        OnDiscount = false,
        WeightUnit = "г",
        Name = "Салат Оливье салат майонезный Самое время вес 0,25",
        VendorId = 1,
        Weight = 250,
        Price = 3.54m,
        Liked = false,
        Portion = 100,
        ProducerName = "СП \"Санта Бремор\" ООО",
        Adult = false,
        Carbo = 36,
        Fat = 23,
        Protein = 6,
        VendorCode = 925677,
        Categories = new List<string>
        {
            "Готовая еда",
            "Салаты"
        },
        Compound = "Сведения о составе: Состав: соус майонезный (масло подсолнечное, вода питьевая, сахар, кукурузный крахмал, уксус, соль йодированная, яичный желток, загуститель ксантановая камедь, регулятор кислотности молочная кислота, молоко сухое обезжиренное, краситель каротины, подсластитель сахарин), картофель, продукт из свинины мясосодержащий вареный рубленый (свинина, крахмал картофельный, клетчатка пшеничная, животный белок, загуститель каррагинан, усилитель вкуса и аромата глутамат натрия 1-замещенный, пряности, специи (содержат горчицу), экстракты специй; антиокислители: аскорбат натрия, изоаскорбат натрия; регуляторы кислотности: трифосфаты, глюконо-дельта-лактон, ацетат натрия, цитрат натрия 2-замещенный; красители: кармины, сахарный колер; фиксатор окраски нитрит натрия), морковь, горошек зеленый, огурец консервированный, консерванты: бензоат натрия, сорбат калия; регулятор кислотности лимонная кислота. <br>Срок годности в днях: Дата изготовления и срок годности указаны на упаковке.<br>Страна изготовления: Республика Беларусь<br>Производитель: СП \"Санта Бремор\" ООО"
    };
    
    protected (string MainPart, string Cents) BuildPrice(decimal price)
    {
        var priceParts = price.ToString(CultureInfo.InvariantCulture).Split('.');
        return (priceParts[0], priceParts[1]);
    }
    
    // protected override async Task OnInitializedAsync()
    // {
    //     await base.OnInitializedAsync();
    //     if (Id != -1)
    //     {
    //         Item = await ItemService.GetItemById(Id);
    //     }
    // }

}
